var searchIndex = {};
searchIndex["build_const"] = {"doc":"`build_const`: crate for creating constants in your build script","items":[[3,"ConstWriter","build_const","Primary object used to write constant files.",null,null],[3,"ConstValueWriter","","Created from `ConstWriter::finish_dependencies`. See documentation for `ConstWriter`.",null,null],[5,"write_array","","Write an array and return the array's full type representation.",null,null],[5,"write_array_raw","","Write an array of raw values and return the array's full type representation.",null,null],[11,"for_build","","Create a ConstWriter to be used for your crate's `build.rs`",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_path","","Create a new ConstWriter to write to an path. If a file already exists at the path then it will be deleted.",0,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"finish_dependencies","","finish writing dependencies and start writing constants",0,{"inputs":[{"name":"self"}],"output":{"name":"constvaluewriter"}}],[11,"add_dependency","","Add a dependency to your constants file.",0,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[11,"add_raw","","Add a raw string to the constants file.",0,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[11,"add_value","","Add a value to the constants file.",1,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"},{"name":"t"}],"output":null}],[11,"add_value_raw","","Add a pre-formatted value to the constants file.",1,{"inputs":[{"name":"self"},{"name":"str"},{"name":"str"},{"name":"str"}],"output":null}],[11,"add_array","","Add an array of len > 0 to the constants",1,null],[11,"add_array_raw","","Add an array of pre-formatted values to the constants file. The length of the array is determined automatically.",1,null],[11,"add_raw","","Add a raw string to the constants file.",1,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[11,"finish","","Finish writing to the constants file and consume self.",1,{"inputs":[{"name":"self"}],"output":null}],[14,"build_const","","Shortcut macro which expands to the same module path used in `ConstWriter::for_build(mod_name)`.",null,null],[14,"src_file","","Macro which returns the path to file in your `src/` directory.",null,null]],"paths":[[3,"ConstWriter"],[3,"ConstValueWriter"]]};
searchIndex["crc"] = {"doc":"crc Rust implementation of CRC(32, 64)","items":[[0,"crc32","crc","",null,null],[5,"make_table","crc::crc32","",null,null],[3,"Digest","","",null,null],[5,"update","","",null,null],[5,"checksum_ieee","","",null,null],[5,"checksum_castagnoli","","",null,null],[5,"checksum_koopman","","",null,null],[17,"CASTAGNOLI","","",null,null],[17,"CASTAGNOLI_TABLE","","",null,null],[17,"IEEE","","",null,null],[17,"IEEE_TABLE","","",null,null],[17,"KOOPMAN","","",null,null],[17,"KOOPMAN_TABLE","","",null,null],[8,"Hasher32","","",null,null],[10,"reset","","",0,{"inputs":[{"name":"self"}],"output":null}],[10,"write","","",0,null],[10,"sum32","","",0,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"new","","",1,{"inputs":[{"name":"u32"}],"output":{"name":"digest"}}],[11,"new_with_initial","","",1,{"inputs":[{"name":"u32"},{"name":"u32"}],"output":{"name":"digest"}}],[11,"reset","","",1,{"inputs":[{"name":"self"}],"output":null}],[11,"write","","",1,null],[11,"sum32","","",1,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"write","","",1,null],[11,"finish","","",1,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[0,"crc64","crc","",null,null],[5,"make_table","crc::crc64","",null,null],[3,"Digest","","",null,null],[5,"update","","",null,null],[5,"checksum_ecma","","",null,null],[5,"checksum_iso","","",null,null],[17,"ECMA","","",null,null],[17,"ECMA_TABLE","","",null,null],[17,"ISO","","",null,null],[17,"ISO_TABLE","","",null,null],[8,"Hasher64","","",null,null],[10,"reset","","",2,{"inputs":[{"name":"self"}],"output":null}],[10,"write","","",2,null],[10,"sum64","","",2,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"new","","",3,{"inputs":[{"name":"u64"}],"output":{"name":"digest"}}],[11,"new_with_initial","","",3,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"digest"}}],[11,"reset","","",3,{"inputs":[{"name":"self"}],"output":null}],[11,"write","","",3,null],[11,"sum64","","",3,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"write","","",3,null],[11,"finish","","",3,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}]],"paths":[[8,"Hasher32"],[3,"Digest"],[8,"Hasher64"],[3,"Digest"]]};
searchIndex["crc_core"] = {"doc":"core functions shared between source and build script of crc crate","items":[[5,"make_table_crc32","crc_core","",null,null],[5,"make_table_crc64","","",null,null]],"paths":[]};
searchIndex["openalias"] = {"doc":"","items":[[3,"ParseError","openalias","OpenAlias parsing error",null,null],[12,"line","","1-based line # of error",0,null],[12,"column","","1-based column # of error",0,null],[12,"offset","","Byte offset of error",0,null],[12,"expected","","Set of expected but unmatched rules",0,null],[3,"CryptoAddress","","",null,null],[12,"cryptocurrency","","",1,null],[12,"address","","",1,null],[12,"recipient_name","","",1,null],[12,"tx_description","","",1,null],[12,"tx_amount","","",1,null],[12,"tx_payment_id","","",1,null],[12,"address_signature","","",1,null],[12,"checksum","","",1,null],[12,"additional_values","","",1,null],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"parseerror"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"cryptoaddress"}}],[11,"hash","","",1,null],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"cryptoaddress"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"cryptoaddress"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"cryptoaddress"}],"output":{"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"self"},{"name":"cryptoaddress"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"self"},{"name":"cryptoaddress"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"self"},{"name":"cryptoaddress"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"self"},{"name":"cryptoaddress"}],"output":{"name":"bool"}}],[11,"cmp","","",1,{"inputs":[{"name":"self"},{"name":"cryptoaddress"}],"output":{"name":"ordering"}}],[11,"from_str","","",1,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"ParseError"],[3,"CryptoAddress"]]};
initSearch(searchIndex);
